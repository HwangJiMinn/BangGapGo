import styles from './applicant.module.css'
import { Badge, Card, Modal } from "antd"
import { IdcardOutlined, CloseOutlined, WechatOutlined, FileDoneOutlined, CheckOutlined } from "@ant-design/icons"
import Meta from "antd/es/card/Meta"
import { ApplicantProps, ApplyProps } from '../../../interface/interface'
import { useSelector } from 'react-redux'
import { RootState } from '../../../Redux/store'
import { userAprove, userRefuse } from '../../../api'

const Applicant: React.FC<ApplicantProps> = ({ showApply, post }) => {

  const userToken = useSelector((state : RootState) => state.user.data.token)

  // ÏäπÏù∏
  const updateApprove = async () => {
    try {
      const response = await fetch(`/api/${userAprove}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          Authorization: userToken.atk.toString(), 
        },
        body: JSON.stringify(post.articleId),
      })

      if (!response.ok) {
        throw new Error('Îß§Ïπ≠ ÏäπÏù∏ Ïã§Ìå®')
      } else {
        Modal.success({
          title: "Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠ ÏÑ±Í≥µ!",
          content: "Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠ÏùÑ ÏäπÏù∏ÌïòÏòÄÏäµÎãàÎã§.",
        });
      }

      const approveData = await response.json()
      window.location.reload() // ModalÏù¥ ÏûàÍ∏∞ ÎïåÎ¨∏Ïóê ÏÉàÎ°úÍ≥†Ïπ® ÏïàÌï¥ÎèÑ ÎêòÎäîÏßÄ ÌôïÏù∏
      return approveData

    } catch (error) {
      console.error('Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠ ÏäπÏù∏ Ïò§Î•ò', error)
    }
  }

  // Í±∞Ï†à
  const updateRefuse = async () => {
    try {
      const response = await fetch(`/api/${userRefuse}`, {
        method: 'PATCH',
        headers: {
          'Content-Type': 'application/json',
          Authorization: userToken.atk.toString(), 
        },
        body: JSON.stringify(post.articleId),
      })

      if (!response.ok) {
        throw new Error('Îß§Ïπ≠ Í±∞Ï†à Ïã§Ìå®')
      } else {
        Modal.success({
          title: "Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠ Í±∞Ï†à!",
          content: "Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠ÏùÑ Í±∞Ï†àÌïòÏòÄÏäµÎãàÎã§.",
        });
      }

      const refuseData = await response.json()
      window.location.reload()
      return refuseData

    } catch (error) {
      console.error('Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠ Í±∞Ï†à Ïò§Î•ò', error)
    }
  }

  // ÏÇ≠Ï†ú
  // const updateDelete = async () => {}

  return (
    <>
      {
        showApply ? (
          post.matchStatus === 'ÎåÄÍ∏∞' ? (
            <div key={post.applyId}>
              <Card
                cover={<Badge.Ribbon text={post.matchStatus} />}
                style={{ width: 530, marginBottom: 30 }}
                actions={[
                  <IdcardOutlined title="ÌîÑÎ°úÌïÑ" />,  
                  <CheckOutlined onClick={updateApprove} />,
                  <CloseOutlined onClick={updateRefuse}/>,
                ]}
              >
                <Meta
                  title={`${post.otherUserName}ÎãòÏù¥ Î£∏Î©îÏù¥Ìä∏ Ïã†Ï≤≠ÏùÑ ÌïòÏòÄÏäµÎãàÎã§.`}
                  description={`${post.articleTitle} Í≤åÏãúÎ¨ºÏóê Ïã†Ï≤≠Ïù¥ ÎèÑÏ∞©ÌñàÏäµÎãàÎã§ üíå`}
                />
                <div>
                  <p className={styles.content}></p>
                </div>
              </Card>
            </div>
          ) : post.matchStatus === 'Í±∞Ï†à' ? (
            <div key={post.applyId}>
              <Card
                cover={<Badge.Ribbon text={post.matchStatus} />}
                style={{ width: 530, marginBottom: 30 }}
                actions={[<CloseOutlined key="close" />]}
              >
                <Meta
                  title={`${post.otherUserName}ÎãòÏùò Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠ÏùÑ Í±∞Ï†à ÌïòÏòÄÏäµÎãàÎã§.`}
                  description="Îã§Î•∏ Î£∏Î©îÏù¥Ìä∏Î•º Íµ¨Ìï¥Î≥¥ÏÑ∏Ïöî ü•≤"
                />
                <div>
                  <p className={styles.content}></p>
                </div>
              </Card>
            </div>
          ) : post.matchStatus === 'ÏäπÏù∏' ? (
            <div key={post.applyId}>
              <Card
                cover={<Badge.Ribbon text={post.matchStatus} />}
                style={{ width: 530, marginBottom: 30 }}
                actions={[
                  <WechatOutlined title="Ï±ÑÌåÖ" />,
                  <IdcardOutlined title="ÌîÑÎ°úÌïÑ" />]}
              >
                <Meta
                  title={`${post.articleTitle} Í≤åÏãúÎ¨º Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠Ïù¥ ÎêòÏóàÏäµÎãàÎã§.`}
                  description="1:1 Ï±ÑÌåÖÏúºÎ°ú ÏõêÌôúÌïú ÎåÄÌôîÎ•º ÎÇòÎà†Î≥¥ÏÑ∏Ïöî üëèüèª"
                />
                <div>
                  <p className={styles.content}></p>
                </div>
              </Card>
            </div>
          ) : null 
        ) : (
          post.matchStatus === 'ÎåÄÍ∏∞' ? (
            <div key={post.applyId}>
              <Card
                cover={<Badge.Ribbon text={post.matchStatus} />}
                style={{ width: 530, marginBottom: 30 }}
                actions={[
                  <IdcardOutlined title="ÌîÑÎ°úÌïÑ" />, 
                  <FileDoneOutlined key="Í≤åÏãúÎ¨º" />]}
              >
                <Meta
                  title={`${post.articleTitle} Í≤åÏãúÎ¨ºÏóê Î£∏Î©îÏù¥Ìä∏ Ïã†Ï≤≠ÏùÑ ÌïòÏòÄÏäµÎãàÎã§.`}
                  description="Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠ Í≤∞Í≥ºÎ•º Í∏∞Îã§Î¶¨ÏÑ∏Ïöî üôåüèª"
                />
                <div>
                  <p className={styles.content}></p>
                </div>
              </Card>
            </div>
          ) : post.matchStatus === 'Í±∞Ï†à' ? (
            <div key={post.applyId}>
              <Card
                cover={<Badge.Ribbon text={post.matchStatus} />}
                style={{ width: 530, marginBottom: 30 }}
                actions={[<CloseOutlined key="close" />]}
              >
                <Meta
                  title={`${post.articleTitle} Í≤åÏãúÎ¨º Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠Ïù¥ Í±∞Ï†à ÎêòÏóàÏäµÎãàÎã§.`}
                  description="ÏïÑÏâΩÎÑ§Ïöî. Îã§Î•∏ Î£∏Î©îÏù¥Ìä∏Î•º Íµ¨Ìï¥Î≥¥ÏÑ∏Ïöî ü•≤"
                />
                <div>
                  <p className={styles.content}></p>
                </div>
              </Card>
            </div>
          ) : post.matchStatus === 'ÏäπÏù∏' ? (
            <Card
              cover={<Badge.Ribbon text={post.matchStatus} />}
              style={{ width: 530, marginBottom: 30 }}
              actions={[
                <WechatOutlined title="Ï±ÑÌåÖ" />,
                <IdcardOutlined title="ÌîÑÎ°úÌïÑ" />]}
            >
              <Meta
                title={`${post.articleTitle} Í≤åÏãúÎ¨º Î£∏Î©îÏù¥Ìä∏ Îß§Ïπ≠Ïù¥ ÎêòÏóàÏäµÎãàÎã§.`}
                description="1:1 Ï±ÑÌåÖÏúºÎ°ú ÏõêÌôúÌïú ÎåÄÌôîÎ•º ÎÇòÎà†Î≥¥ÏÑ∏Ïöî üëèüèª"
              />
              <div>
                <p className={styles.content}></p>
              </div>
            </Card>
          ) : null
        ) 
      }
    </>
  )
}

export default Applicant